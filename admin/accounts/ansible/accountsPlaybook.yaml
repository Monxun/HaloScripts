---
- hosts: "{{ hostgroup_selector }}"
  become: true
  when: dev

# ////////////////////////////////////////////////////////////////////////////////////////
#  VARIABLES
# ////////////////////////////////////////////////////////////////////////////////////////
  vars_files:
  - "./vars.yaml"

# ////////////////////////////////////////////////////////////////////////////////////////
#  ENVIRONMENT VARIABLES
# ////////////////////////////////////////////////////////////////////////////////////////
  environment:
    ANSIBLE_HOST: "{{ inventory_hostname }}"

# ////////////////////////////////////////////////////////////////////////////////////////
#  TASKS
# ////////////////////////////////////////////////////////////////////////////////////////
  tasks:

# ////////////////////////////////////////////////////////////////////////////////////////
#  GRAB ACCOUNTS
# //////////////////////////////////////////////////////////////////////////////////////// 

  # GRAB ACCOUNTS //////////////////////////////////////////////////////////////////////
    - name: Run Script for {{ inventory_hostname }} Accounts JSON
      shell:
      args:
        executable: /usr/bin/bash
        cmd: bash accountsJSON.sh
        chdir: ./
      register: accounts_inventory

  # LOCAL TEST //////////////////////////////////////////////////////////////////////////
    - name: Write results to local output file (DEV)
      copy:
        dest: "./output/accounts_inventory_output.json"
        content: "{{inventory_hostname}}: {{accounts_inventory}}"
      when: dev
      # delegate_to: localhost


- hosts: localhost
  gather_facts: false
  vars_files:
  - "./vars.yaml"
  tasks:
    - name: Write results to local output file (PRODUCTION)
      copy:
        dest: "./output/{{file_output_name}}.json"
        content: |
          {% for host in all %}
          === {{ host }} ==

          {{hostvars[host].accounts_inventory}}

          {% endfor %}
      when: not dev

    - name: Upload/PUT file to S3 bucket
      amazon.aws.aws_s3:
        profile: personal
        bucket: inventory
        mode: put
        object: "{{ ansible_date_time.iso8601 }}-{{file_output_name}}.json"
        src: "/output/{{file_output_name}}.json"
      when: not dev

    - name: Run Script for {{ inventory_hostname }} Accounts CSV
      shell:
      args:
        executable: /usr/bin/bash
        cmd: cat /output/accounts_inventory_output.json| jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' 
        chdir: ./
      register: accounts_csv
      when: output_csv